<?php

require_once dirname(__FILE__) . '/../../../application/models/AppDateTime.php';
require_once dirname(__FILE__) . '/../../../application/models/ReoccurenceTemplate.php';

/**
 * Test class for Application_Model_ReoccurenceTemplate.
 * Generated by PHPUnit on 2011-11-10 at 22:21:13.
 */
class Application_Model_ReoccurenceTemplateTest extends PHPUnit_Framework_TestCase {

   /**
    * @var Application_Model_ReoccurenceTemplate
    */
   protected $object;

   /**
    * Sets up the fixture, for example, opens a network connection.
    * This method is called before a test is executed.
    */
   protected function setUp() {
      $this->object = new Application_Model_ReoccurenceTemplate;
   }

   /**
    * Tears down the fixture, for example, closes a network connection.
    * This method is called after a test is executed.
    */
   protected function tearDown() {
      
   }

   public function testFindNthWeekdayInMonth() {

      //Returns the right object $day, $offset, $reverse = false
      
      $this->object = new Application_Model_ReoccurenceTemplate("2011-11-01");
      $this->assertInstanceOf('DateTime', $this->object->findNthWeekdayInMonth(3, 2));
      
      //Second Wednesday in Nov 2011
      $this->object = new Application_Model_ReoccurenceTemplate("2011-11-01");
      $this->assertEquals(1320796800, $this->object->findNthWeekdayInMonth(3, 2)->getTimestamp(), 'wrong algorithm');
      //First Tuesday in Nov 2011
      $this->assertEquals(1320105600, $this->object->findNthWeekdayInMonth(2, 1)->getTimestamp(), 'wrong algorithm');

      //Second Wednesday in Nov 2011 Reverse
      $this->object = new Application_Model_ReoccurenceTemplate("2011-11-01");
      $this->assertEquals(1321488000, $this->object->findNthWeekdayInMonth(4, 2, true)->getTimestamp(), 'wrong algorithm');
      //Last Wednesday in Nov 2011
      $this->object = new Application_Model_ReoccurenceTemplate("2011-11-01");
      $this->assertEquals(1322611200, $this->object->findNthWeekdayInMonth(3, 1, true)->getTimestamp(), 'wrong algorithm');

      //Fifth Monday in Feb 2011
      $this->object = new Application_Model_ReoccurenceTemplate("2011-02-01");
      $this->assertFalse($this->object->findNthWeekdayInMonth(1, 5), 'wrong algorithm');
   }

   public function testFindNthDayOfMonth() {
      
      //Returns the right object
      $this->object = new Application_Model_ReoccurenceTemplate("2011-11-01");
      $this->assertInstanceOf('DateTime', $this->object->findNthDayOfMonth(1));
      //First day of Nov 2011
      $this->object = new Application_Model_ReoccurenceTemplate("2011-11-01");
      $this->assertEquals(1320192000, $this->object->findNthDayOfMonth(2)->getTimestamp());
      //Last day of Nov 2011
      $this->object = new Application_Model_ReoccurenceTemplate("2011-11-01");
      $this->assertEquals(1322611200, $this->object->findNthDayOfMonth(-1)->getTimestamp());
   }
   
}

?>
